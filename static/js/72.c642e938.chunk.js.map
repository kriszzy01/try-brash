{"version":3,"file":"static/js/72.c642e938.chunk.js","mappings":"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","sources":["webpack://try-brash/./src/features/payments/routes/Payment/style.module.scss?3b26","webpack://try-brash/./src/features/payments/components/ValidationForm/style.module.scss?1f19","webpack://try-brash/./src/components/Form/FieldWrapper/style.module.scss?1f10","components/Form/FieldWrapper/index.tsx","webpack://try-brash/./src/components/Form/InputField/style.module.scss?7641","components/Form/InputField/index.tsx","lib/axios.ts","config/index.ts","features/payments/api/verifyAccount.ts","features/payments/api/getBanks.ts","webpack://try-brash/./src/components/Form/AutocompleteSearch/style.module.scss?2e69","webpack://try-brash/./src/components/Form/AutocompleteSearch/Options/style.module.scss?65e9","components/Form/AutocompleteSearch/Options/index.tsx","components/Form/AutocompleteSearch/index.tsx","features/payments/components/ValidationForm/index.tsx","webpack://try-brash/./src/features/payments/components/CreatePayment/style.module.scss?9f4a","features/payments/api/createRecipient.ts","utils/commify.ts","features/payments/components/CreatePayment/index.tsx","features/payments/routes/Payment/index.tsx","webpack://try-brash/./src/features/payments/routes/Transactions/style.module.scss?65d3","assets/archive.svg","webpack://try-brash/./src/components/Elements/Table/style.module.scss?2ff7","components/Elements/Table/index.tsx","webpack://try-brash/./src/features/payments/components/DetailsDialog/style.module.scss?3e3d","features/payments/components/DetailsDialog/index.tsx","features/payments/routes/Transactions/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"payment\":\"style_payment__vx2Ah\",\"payment__spinner\":\"style_payment__spinner__h-AAN\",\"payment__text\":\"style_payment__text__XTaGr\",\"payment__text-container\":\"style_payment__text-container__FreL2\",\"payment__forms\":\"style_payment__forms__0GJNr\",\"payment__forms-inner\":\"style_payment__forms-inner__UMJar\",\"payment__forms-step\":\"style_payment__forms-step__raMRo\",\"payment__forms-container\":\"style_payment__forms-container__qtgix\"};","// extracted by mini-css-extract-plugin\nexport default {\"validation\":\"style_validation__LK+mf\",\"validation__form\":\"style_validation__form__blN3B\",\"validation__form-title\":\"style_validation__form-title__FAvuE\",\"validation__form-button\":\"style_validation__form-button__CFcbM\"};","// extracted by mini-css-extract-plugin\nexport default {\"fieldwrapper\":\"style_fieldwrapper__RuiXp\",\"fieldwrapper_label\":\"style_fieldwrapper_label__CtTmj\",\"fieldwrapper_error\":\"style_fieldwrapper_error__AnLNB\"};","import { FormikErrors } from \"formik\";\nimport clsx from \"clsx\";\n\nimport style from \"./style.module.scss\";\n\ninterface FieldWrapperProps {\n  label?: string;\n  className?: string;\n  children: React.ReactNode;\n  error?: string;\n  htmlFor: string;\n}\n\nexport type FieldWrapperPassThroughProps = Omit<\n  FieldWrapperProps,\n  \"className\" | \"children\" | \"htmlFor\"\n>;\n\nexport const FieldWrapper = ({\n  label,\n  children,\n  error,\n  className,\n  htmlFor,\n}: FieldWrapperProps) => {\n  const styleClassName = clsx({ [style[\"fieldwrapper\"]]: true, className });\n\n  return (\n    <div className={styleClassName}>\n      <label className={style[\"fieldwrapper_label\"]} htmlFor={htmlFor}>\n        {label}\n        <div className={style[\"fieldwrapper_container\"]}>{children}</div>\n      </label>\n\n      {error && (\n        <div\n          className={style[\"fieldwrapper_error\"]}\n          role=\"alert\"\n          aria-label={error}\n        >\n          {error}\n        </div>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"style_input__rv440\"};","import clsx from \"clsx\";\nimport { FieldWrapper, FieldWrapperPassThroughProps } from \"../FieldWrapper\";\n\nimport styles from \"./style.module.scss\";\n\ntype ExtendedTypes = React.InputHTMLAttributes<HTMLInputElement> &\n  FieldWrapperPassThroughProps;\n\ninterface InputFieldProps extends ExtendedTypes {\n  id: string;\n}\n\nexport const InputField = ({\n  type = \"text\",\n  className,\n  id,\n  error,\n  label,\n  ...props\n}: InputFieldProps) => {\n  const styleClassName = clsx({ [styles[\"input\"]]: true, className });\n\n  return (\n    <FieldWrapper label={label} error={error} htmlFor={id}>\n      <input\n        type={type}\n        {...props}\n        className={styleClassName}\n        value={props.value}\n      />\n    </FieldWrapper>\n  );\n};\n","import Axios from \"axios\";\n\nimport { API_URL, PAYSTACK_KEY } from \"@/config\";\n\nexport const axios = Axios.create({\n  baseURL: API_URL,\n  headers: {\n    Authorization: `Bearer ${PAYSTACK_KEY}`,\n  },\n});\n","export const API_URL = process.env.REACT_APP_API_URL as string;\nexport const PAYSTACK_KEY = process.env.REACT_APP_PAYSTACK_SECRET_KEY as string; //ideally we should use assign this based on node environment\n","import { axios } from \"@/lib/axios\";\nimport { useMutation } from \"react-query\";\n\nexport type VerifyAccountData = {\n  account_number: string;\n  bank_code: string;\n};\n\nexport const verifyAccount = ({\n  account_number,\n  bank_code,\n}: VerifyAccountData): Promise<any> => {\n  return axios.get(\"/bank/resolve\", {\n    params: {\n      account_number,\n      bank_code,\n    },\n  });\n};\n\nexport const useVerifyAccount = () => {\n  return useMutation({\n    mutationFn: verifyAccount,\n    onError: (data) => console.log(data),\n  });\n};\n","import { axios } from \"@/lib/axios\";\nimport { useQuery } from \"react-query\";\nimport { useDispatch } from \"react-redux\";\n\nimport { setBanks } from \"@/slices/banks\";\n\nexport const getBanks = () => {\n  return axios.get(\"/bank\");\n};\n\nexport const useBanks = () => {\n  const dispatch = useDispatch();\n\n  return useQuery({\n    queryKey: [\"banks\"],\n    queryFn: () => getBanks(),\n    onSuccess: ({ data }) => dispatch(setBanks(data.data as any)),\n    suspense: false,\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"autocomplete\":\"style_autocomplete__CTAdr\"};","// extracted by mini-css-extract-plugin\nexport default {\"option\":\"style_option__2G9YN\",\"option__list\":\"style_option__list__EDVuu\"};","import * as React from \"react\";\nimport { motion } from \"framer-motion\";\n\nimport style from \"./style.module.scss\";\n\nimport { Bank } from \"@/features/payments/types\";\n\ninterface OptionsProps {\n  results: Bank[];\n  handleClick: (code: string, bank: string) => void;\n}\n\nexport const Options = ({ handleClick, results }: OptionsProps) => {\n  return (\n    <motion.div\n      initial={{ scale: 1.05 }}\n      animate={{ scale: 1 }}\n      className={style[\"option\"]}\n      aria-expanded={true}\n    >\n      <ul role=\"listbox\">\n        {results.map((option, index) => (\n          <li\n            role=\"option\"\n            tabIndex={-1}\n            className={style[\"option__list\"]}\n            key={option.id}\n            onClick={() => handleClick(option.code, option.name)}\n          >\n            {option.name}\n          </li>\n        ))}\n      </ul>\n    </motion.div>\n  );\n};\n","import * as React from \"react\";\nimport { FieldWrapper, FieldWrapperPassThroughProps } from \"../FieldWrapper\";\n\nimport style from \"./style.module.scss\";\n\nimport { Bank } from \"@/features/payments/types\";\nimport { Options } from \"./Options\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { useDisclosure } from \"@/hooks/useDisclosure\";\nimport { FormikHelpers } from \"formik\";\n\ntype ExtendedTypes = React.InputHTMLAttributes<HTMLInputElement> &\n  FieldWrapperPassThroughProps;\n\ninterface AutocompleteSearchProps extends ExtendedTypes {\n  options: Bank[];\n  className?: string;\n  defaultValue?: string;\n  placeholder?: string;\n  id: string;\n  handleClick: FormikHelpers<{\n    bankCode: string;\n    accountNumber: string;\n  }>[\"setFieldValue\"];\n}\n\nexport const AutocompleteSearch = ({\n  label,\n  options,\n  error,\n  className,\n  defaultValue,\n  placeholder,\n  id,\n  handleClick,\n  onChange,\n  ...props\n}: AutocompleteSearchProps) => {\n  const [searchterm, setSearchterm] = React.useState(\"\");\n  const { isOpen: isInputFocus, handleClose, handleOpen } = useDisclosure();\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchterm(event.target.value);\n    handleOpen();\n  };\n\n  const searchResult = options.filter((option) => {\n    let term = option.name.toLowerCase();\n\n    return term.toLowerCase().includes(searchterm.toLowerCase());\n  });\n\n  return (\n    <FieldWrapper label={label} error={error} htmlFor={id}>\n      <input\n        type=\"search\"\n        aria-label=\"Search for bank\"\n        aria-controls=\"options\"\n        value={searchterm}\n        placeholder=\"eg. Access\"\n        onChange={handleChange}\n        onBlur={() => setTimeout(handleClose, 100)}\n        className={style[\"autocomplete\"]}\n        id={id}\n      />\n      <AnimatePresence>\n        {isInputFocus && (\n          <Options\n            results={searchResult}\n            handleClick={(code, bank) => {\n              handleClick(\"bankCode\", code);\n              setSearchterm(bank);\n            }}\n          />\n        )}\n      </AnimatePresence>\n    </FieldWrapper>\n  );\n};\n","import { Formik, Form } from \"formik\";\nimport * as yup from \"yup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AnimatePresence, motion } from \"framer-motion\";\n\nimport style from \"./style.module.scss\";\n\nimport { Button } from \"@/components/Elements\";\nimport { InputField } from \"@/components/Form/InputField\";\nimport { SelectField } from \"@/components/Form/SelectField\";\n\nimport { useVerifyAccount } from \"../../api/verifyAccount\";\n\nimport { FormSteps } from \"../../types\";\nimport { bankSlice } from \"@/selectors\";\nimport { setAccount } from \"@/slices/account\";\nimport { useBanks } from \"../../api/getBanks\";\nimport { addNotification } from \"@/slices/notifications\";\nimport { AutocompleteSearch } from \"@/components/Form/AutocompleteSearch\";\n\ninterface ValidationFormProps {\n  handleSubmit: (step: FormSteps) => void;\n}\n\nexport const ValidationForm = ({ handleSubmit }: ValidationFormProps) => {\n  useBanks(); //get bank list\n  const banks = useSelector(bankSlice);\n  const dispatch = useDispatch();\n  const { mutateAsync } = useVerifyAccount();\n\n  const sortedBankList = Object.values(banks.banks).sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n\n  const initialFormValues = {\n    bankCode: \"\",\n    accountNumber: \"\",\n  };\n\n  const onSubmit = async ({\n    accountNumber,\n    bankCode,\n  }: typeof initialFormValues) => {\n    try {\n      const { data } = await mutateAsync({\n        bank_code: bankCode,\n        account_number: accountNumber,\n      });\n      dispatch(setAccount(data.data));\n      handleSubmit(\"payment\");\n    } catch (error) {\n      dispatch(\n        addNotification({\n          title: \"Error\",\n          message:\n            \"Something went wrong. Please check your account details and try again.\",\n          variant: \"error\",\n        })\n      );\n    }\n  };\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ x: 50 }}\n        animate={{ x: 0, transition: {} }}\n        exit={{ x: -50 }}\n        className={style[\"validation\"]}\n      >\n        <div className={style[\"validation__form\"]}>\n          <h2 className={style[\"validation__form-title\"]}>\n            Validate Account Details\n          </h2>\n\n          <Formik\n            initialValues={initialFormValues}\n            onSubmit={onSubmit}\n            validationSchema={yup.object({\n              accountNumber: yup\n                .string()\n                .required(\"Account number is required\")\n                .min(10, \"Account number must be 8 characters or more\"),\n              bankCode: yup.string().required(\"Bank is required\"),\n            })}\n          >\n            {(props) => (\n              <Form>\n                <AutocompleteSearch\n                  options={sortedBankList as any}\n                  id=\"bank\"\n                  name=\"bankCode\"\n                  error={props.errors.bankCode}\n                  handleClick={props.setFieldValue}\n                  onBlur={props.handleBlur}\n                  label=\"Beneficiary Bank\"\n                  value={props.values.bankCode}\n                  placeholder=\"eg. Access Bank\"\n                />\n\n                <InputField\n                  id=\"accountnumber\"\n                  name=\"accountNumber\"\n                  error={props.errors.accountNumber}\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  value={props.values.accountNumber}\n                  label=\"Beneficiary Account Number\"\n                  placeholder=\"eg. 2124859881\"\n                />\n\n                <div className={style[\"validation__form-button\"]}>\n                  <Button type=\"submit\" isLoading={props.isSubmitting}>\n                    Validate\n                  </Button>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"payment\":\"style_payment__ISF+f\",\"payment__dialog\":\"style_payment__dialog__KSr3I\",\"payment-back-button\":\"style_payment-back-button__gyNLX\",\"payment__form\":\"style_payment__form__VNxZz\",\"payment__form-title\":\"style_payment__form-title__3pODu\",\"payment__form-account\":\"style_payment__form-account__z+RND\"};","import { axios } from \"@/lib/axios\";\nimport { useDispatch } from \"react-redux\";\nimport { useMutation } from \"react-query\";\nimport { addNotification } from \"@/slices/notifications\";\nimport { addTransfer } from \"@/slices/payments\";\n\ninterface CreateRecipientData {\n  type: string;\n  name: string;\n  account_number: string;\n  bank_code: string;\n  currency: string;\n}\n\nexport const createRecipient = (recipient: CreateRecipientData) => {\n  return axios.post(\"/transferrecipient\", recipient);\n};\n\nexport const useCreateRecipient = () => {\n  const dispatch = useDispatch();\n\n  return useMutation({\n    onError: () => {\n      new Promise((resolve) => {\n        dispatch(\n          addNotification({\n            message: \"Error\",\n            title: \"Transfer unsuccessful, please try again later\",\n            variant: \"error\",\n          })\n        );\n        resolve(\"\");\n      });\n    },\n    mutationFn: createRecipient,\n    onSuccess: () => {\n      new Promise((resolve) => {\n        dispatch(\n          addNotification({\n            title: \"Success!\",\n            message:\n              \"Transfer successful, please check the transactions page for details.\",\n            variant: \"info\",\n          })\n        );\n\n        resolve(null);\n      });\n    },\n  });\n};\n","export function commify(value: number) {\n  let numberString: string | string[] = String(value);\n\n  numberString = numberString.split(\"\").reverse();\n\n  numberString = numberString.reduce((prev, next, index) => {\n    let shouldComma = (index + 1) % 3 === 0 && index + 1 < numberString.length;\n\n    let updatedValue = `${prev}${next}`;\n\n    if (shouldComma) {\n      updatedValue = `${updatedValue},`;\n    }\n\n    return updatedValue;\n  }, \"\");\n\n  numberString = numberString.split(\"\").reverse().join(\"\");\n\n  return numberString;\n}\n","import { Formik, Form, FormikProps } from \"formik\";\nimport * as yup from \"yup\";\nimport { useSelector } from \"react-redux\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { useDispatch } from \"react-redux\";\n\nimport style from \"./style.module.scss\";\n\nimport { Button } from \"@/components/Elements\";\nimport { InputField } from \"@/components/Form/InputField\";\nimport { ConfirmationDialog } from \"@/components/Elements/ConfirmationDialog\";\n\nimport { accountSlice } from \"@/selectors\";\nimport { bankSlice } from \"@/selectors\";\nimport { useDisclosure } from \"@/hooks/useDisclosure\";\n\nimport { useCreateRecipient } from \"../../api/createRecipient\";\nimport { PaymentStepsProps } from \"../../types\";\nimport { addTransfer } from \"@/slices/payments\";\nimport { commify } from \"@/utils/commify\";\n\nexport const CreatePayment = ({ handleSubmit }: PaymentStepsProps) => {\n  const { isOpen, handleOpen } = useDisclosure(); //loading indicator for confirm button\n  const account = useSelector(accountSlice);\n  const { banks } = useSelector(bankSlice);\n  const { mutateAsync } = useCreateRecipient();\n  const dispatch = useDispatch();\n\n  const accountBank = banks[account.bankId];\n\n  const initialFormValues = {\n    amount: \"\",\n    narration: \"\",\n  };\n\n  const handleTransfer = async (\n    props: FormikProps<typeof initialFormValues>\n  ) => {\n    try {\n      handleOpen();\n      const payload = {\n        bank_code: accountBank.code,\n        type: accountBank.type,\n        name: account.accountName,\n        account_number: account.accountNumber,\n        currency: accountBank.currency,\n        description: props.values.narration,\n      };\n\n      const data = await mutateAsync(payload);\n      if (data) {\n        dispatch(\n          addTransfer({ ...data.data.data, amount: props.values.amount })\n        );\n        handleSubmit(\"validation\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ x: 50 }}\n        animate={{ x: 0 }}\n        className={style[\"payment\"]}\n      >\n        <div>\n          <button\n            className={style[\"payment-back-button\"]}\n            type=\"button\"\n            onClick={() => handleSubmit(\"validation\")}\n          >\n            Back\n          </button>\n        </div>\n\n        <div className={style[\"payment__form\"]}>\n          {/* <h2 className={style[\"payment__form-title\"]}>Process Payment</h2> */}\n\n          <div className={style[\"payment__form-account\"]}>\n            <p>Account Name: {account.accountName}</p>\n            <p>Bank Name: {accountBank.name}</p>\n          </div>\n\n          <Formik\n            initialValues={initialFormValues}\n            onSubmit={() => {}} //handled by handleTransfer function which is called from the confirm button\n            validationSchema={yup.object({\n              amount: yup\n                .number()\n                .required(\"Amount is required\")\n                .min(100, \"Minimum amount is #100\")\n                .max(10000000, \"Maximum amount is #10000000\"),\n              narration: yup.string().required(\"Narration is required\"),\n            })}\n          >\n            {(props) => (\n              <Form>\n                <div>\n                  <InputField\n                    id=\"amount\"\n                    name=\"amount\"\n                    error={props.errors.amount}\n                    onChange={props.handleChange}\n                    onBlur={props.handleBlur}\n                    value={props.values.amount}\n                    label=\"Amount: Minimum Amount: #100\"\n                    type=\"number\"\n                    placeholder=\"eg.10000\"\n                  />\n                </div>\n\n                <InputField\n                  id=\"narration\"\n                  name=\"narration\"\n                  error={props.errors.narration}\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  value={props.values.narration}\n                  label=\"Narration\"\n                  type=\"string\"\n                  placeholder=\"eg. Vacation fees\"\n                />\n\n                <ConfirmationDialog\n                  triggerButton={\n                    <Button\n                      type=\"submit\"\n                      disabled={\n                        !Boolean(props.values.amount && props.values.narration)\n                      }\n                    >\n                      Proceed\n                    </Button>\n                  }\n                  confirmButton={\n                    <Button\n                      type=\"button\"\n                      variant=\"danger\"\n                      onClick={() => handleTransfer(props)}\n                      isLoading={isOpen}\n                    >\n                      Confirm\n                    </Button>\n                  }\n                  title=\"Confirmation\"\n                  body={`Are You sure you want transfer ${commify(\n                    +props.values.amount\n                  )} to ${account.accountName}?`}\n                />\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n","import * as React from \"react\";\nimport { motion } from \"framer-motion\";\n\nimport style from \"./style.module.scss\";\n\nimport { ValidationForm } from \"../../components/ValidationForm\";\nimport { CreatePayment } from \"../../components/CreatePayment\";\nimport { FormSteps } from \"../../types\";\n\nimport { Spinner } from \"@/components/Elements\";\n\nexport const Payment = () => {\n  const [formStep, setFormStep] = React.useState<FormSteps>(\"validation\");\n\n  const handleNextStep = (step: FormSteps) => setFormStep(step);\n\n  const formSteps: Record<FormSteps, JSX.Element> = {\n    validation: <ValidationForm handleSubmit={handleNextStep} />,\n    payment: <CreatePayment handleSubmit={handleNextStep} />,\n  };\n\n  return (\n    <div className={style[\"payment\"]}>\n      <div className={style[\"payment__text\"]}>\n        <div className={style[\"payment__text-container\"]}>\n          <motion.h1\n            initial={{ opacity: 0 }}\n            animate={{\n              opacity: 1,\n              transition: { duration: 1.5, ease: \"linear\" },\n            }}\n          >\n            Pay anyone, <br /> anywhere.\n          </motion.h1>\n          <motion.p\n            initial={{ opacity: 0 }}\n            animate={{\n              opacity: 1,\n              transition: { duration: 1.5, ease: \"linear\" },\n            }}\n          >\n            Pay family, friends and bills for <br /> less-at home and abroad.\n          </motion.p>\n        </div>\n      </div>\n\n      <React.Suspense\n        fallback={\n          <div className={style[\"payment__spinner\"]}>\n            <Spinner size=\"lg\" variant=\"light\" />\n          </div>\n        }\n      >\n        <div className={style[\"payment__forms\"]}>\n          <div className={style[\"payment__forms-inner\"]}>\n            {/* <div className={style[\"payment__forms-step\"]}>Step</div> */}\n\n            <div className={style[\"payment__forms-container\"]}>\n              {formSteps[formStep]}\n            </div>\n          </div>\n        </div>\n      </React.Suspense>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"payments\":\"style_payments__jQ0OV\",\"payments__table\":\"style_payments__table__6a77O\"};","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgArchive(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    className: \"h-16 w-16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArchive);\nexport default __webpack_public_path__ + \"static/media/archive.1ea807f7e51a45461de5af5e5770c3a6.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"style_table__5J2nI\",\"table__empty\":\"style_table__empty__x-w4U\"};","import SVG from \"react-inlinesvg\";\nimport { motion } from \"framer-motion\";\n\nimport archive from \"@/assets/archive.svg\";\n\nimport style from \"./style.module.scss\";\n\ninterface TableColumn<Entry> {\n  title: string;\n  field: keyof Entry;\n  Cell?({ entry }: { entry: Entry }): React.ReactElement;\n}\n\nexport interface TableProps<Entry> {\n  data: Entry[];\n  columns: TableColumn<Entry>[];\n}\n\nexport const Table = <Entry extends { id: string }>({\n  data,\n  columns,\n}: TableProps<Entry>) => {\n  if (!data?.length) {\n    return (\n      <div style={{ fontSize: \"1.3rem\" }}>\n        <SVG src={archive} width={64} height={64} />\n        <h4>No Transactions Found</h4>\n      </div>\n    );\n  }\n\n  return (\n    <div className={style[\"table\"]}>\n      <table>\n        <thead className=\"bg-gray-50\">\n          <tr>\n            {columns.map((column, index) => (\n              <th key={column.title + index} scope=\"col\">\n                {column.title}\n              </th>\n            ))}\n          </tr>\n        </thead>\n\n        <tbody>\n          {data.map((entry, entryIndex) => (\n            <motion.tr\n              initial={{ opacity: 0, y: 10 }}\n              animate={{\n                opacity: 1,\n                y: 0,\n                transition: { delay: entryIndex * 0.1 },\n              }}\n              key={entry?.id || entryIndex}\n            >\n              {columns.map(({ Cell, field, title }, columnIndex) => (\n                <td key={title + columnIndex}>\n                  {Cell ? <Cell entry={entry} /> : entry[field]}\n                </td>\n              ))}\n            </motion.tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"style_dialog__aJrbk\",\"dialog-trigger\":\"style_dialog-trigger__-LqP1\",\"dialog-header\":\"style_dialog-header__bjC5G\",\"dialog-header-content\":\"style_dialog-header-content__S1Mro\",\"dialog-section\":\"style_dialog-section__ud-3g\",\"dialog-section-text\":\"style_dialog-section-text__AzsQ9\"};","import * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SVG from \"react-inlinesvg\";\n\nimport close from \"@/assets/close.svg\";\n\nimport style from \"./style.module.scss\";\n\nimport { Dialog } from \"@/components/Elements\";\n\nimport { useDisclosure } from \"@/hooks/useDisclosure\";\nimport { paymentsSlice } from \"@/selectors\";\n\ninterface DetailsModalProp {\n  trigger: React.ReactElement;\n  id: string;\n}\n\nexport const DetailsDialog = ({ trigger, id }: DetailsModalProp) => {\n  const { isOpen, handleClose, handleOpen } = useDisclosure();\n  const { transfers } = useSelector(paymentsSlice);\n\n  const triggerButton = React.cloneElement(trigger, { onClick: handleOpen });\n  const transfer = transfers[id];\n\n  return (\n    <>\n      <div className={style[\"dialog-trigger\"]}>{triggerButton}</div>\n      <Dialog isOpen={isOpen} handleClose={handleClose} fillPage={true}>\n        <div className={style[\"dialog\"]}>\n          <div className={style[\"dialog-header\"]}>\n            <div className={style[\"dialog-header-content\"]}>\n              <h2>Transaction Detail</h2>\n              <div className={style[\"dialog-header-content-text\"]}>\n                <p>Recipient Code: {transfer.recipient_code}</p>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              aria-label=\"close\"\n              onClick={handleClose}\n              className={style[\"dialog-close-button\"]}\n            >\n              <SVG src={close} width={32} height={32} />\n            </button>\n          </div>\n\n          <div className={style[\"dialog-section\"]}>\n            <hr />\n            <h3>Description</h3>\n            <div className={style[\"dialog-section-text\"]}>\n              <p>Narration: {transfer.description}</p>\n              <p>Amount: {transfer.amount}</p>\n              <p>Currency: {transfer.currency}</p>\n              <p>Date: {new Date(transfer.createdAt).toDateString()}</p>\n              <p>Time: {new Date(transfer.createdAt).toTimeString()}</p>\n            </div>\n          </div>\n\n          <div className={style[\"dialog-section\"]}>\n            <hr />\n            <h3>Bank Details</h3>\n            <div className={style[\"dialog-section-text\"]}>\n              <p>Bank Name: {transfer.details.bank_name}</p>\n              <p>Account Holder: {transfer.details.account_name}</p>\n              <p>Account Number: {transfer.details.account_number}</p>\n            </div>\n          </div>\n        </div>\n      </Dialog>\n    </>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport { motion } from \"framer-motion\";\n\nimport style from \"./style.module.scss\";\n\nimport { Table } from \"@/components/Elements/Table\";\nimport { Button } from \"@/components/Elements\";\n\nimport { paymentsSlice } from \"@/selectors\";\nimport { DetailsDialog } from \"../../components/DetailsDialog\";\n\nconst columns = [\n  { title: \"Name\", field: \"name\" },\n  { title: \"Description\", field: \"description\" },\n  { title: \"Account\", field: \"account\" },\n  { title: \"Details\", field: \"details\" },\n];\n\nexport const Transactions = () => {\n  const { transfers } = useSelector(paymentsSlice);\n\n  const data = Object.values(transfers).map((transaction, index) => {\n    const { name, details, transactionId, description } = transaction;\n\n    return {\n      id: transactionId,\n      name,\n      description,\n      account: details.account_number,\n      details: (\n        <DetailsDialog\n          trigger={<Button variant=\"inverse\">View details</Button>}\n          id={transactionId}\n        />\n      ),\n    };\n  });\n\n  return (\n    <div className={style[\"payments\"]}>\n      <div className={style[\"payments__table\"]}>\n        <Table data={data} columns={columns as any} />\n      </div>\n    </div>\n  );\n};\n"],"names":["FieldWrapper","label","children","error","className","htmlFor","styleClassName","clsx","style","role","InputField","type","id","props","styles","value","axios","Axios","baseURL","process","headers","Authorization","verifyAccount","account_number","bank_code","params","useBanks","dispatch","useDispatch","useQuery","queryKey","queryFn","onSuccess","data","setBanks","suspense","Options","handleClick","results","motion","initial","scale","animate","map","option","index","tabIndex","onClick","code","name","AutocompleteSearch","options","defaultValue","placeholder","onChange","React","searchterm","setSearchterm","useDisclosure","isInputFocus","isOpen","handleClose","handleOpen","searchResult","filter","toLowerCase","includes","event","target","onBlur","setTimeout","AnimatePresence","bank","ValidationForm","handleSubmit","banks","useSelector","bankSlice","mutateAsync","useMutation","mutationFn","onError","console","log","sortedBankList","Object","values","sort","a","b","localeCompare","onSubmit","accountNumber","bankCode","setAccount","addNotification","title","message","variant","x","transition","exit","initialValues","validationSchema","yup","required","min","errors","setFieldValue","handleBlur","handleChange","isLoading","isSubmitting","createRecipient","recipient","commify","numberString","String","split","reverse","reduce","prev","next","shouldComma","length","updatedValue","join","CreatePayment","account","accountSlice","Promise","resolve","useCreateRecipient","accountBank","bankId","handleTransfer","payload","accountName","currency","description","narration","addTransfer","amount","max","ConfirmationDialog","triggerButton","disabled","Boolean","confirmButton","body","Payment","formStep","setFormStep","handleNextStep","step","formSteps","validation","payment","opacity","duration","ease","fallback","size","Table","columns","column","scope","entry","entryIndex","y","delay","columnIndex","Cell","field","fontSize","src","archive","width","height","DetailsDialog","trigger","transfers","paymentsSlice","transfer","fillPage","recipient_code","close","Date","createdAt","toDateString","toTimeString","details","bank_name","account_name","Transactions","transaction","transactionId"],"sourceRoot":""}